{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AACrE,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAC7D,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAGrF,YAAY;AACZ,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;AACtC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;AAEtC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;AACzC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AAEpC,YAAY;AACZ,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACtD,MAAM,cAAc,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACtD,OAAO,CAAC,GAAG,CAAC,kCAAkC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAEhF,wBAAwB;AACxB,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAChD,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC;AACrC,OAAO,CAAC,GAAG,CAAC,mBAAmB,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAE5D,YAAY;AAEZ,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;AAEpF,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,kBAAkB,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;AAEjE,KAAK,CAAC,mBAAmB,EAAE,CAAC;AAC5B,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,kBAAkB,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;AAEjE,KAAK,CAAC,aAAa,EAAE,CAAC;AACtB,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,kBAAkB,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;AAEjE,YAAY;AAEZ,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACjD,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,iBAAiB,CAAC,CAAC;AAEvE,MAAM,YAAY,GAAG,oBAAoB,CAAC,EAAE,CAAC,CAAC;AAC9C,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,YAAY,CAAC,CAAC","sourcesContent":["import { capitalize, reverseString } from './modules/stringUtils.js';\nimport { Finance } from './modules/finance.js';\nimport { UserManagement } from './modules/userManagement.js';\nimport { generateFibonacci, generatePrimeNumbers } from './modules/sequenceUtils.js';\n\n\n// 1 задание\nconsole.log(capitalize('typescript'));\nconsole.log(capitalize('new string'));\n\nconsole.log(reverseString('TypeScript'));\nconsole.log(reverseString('hello'));\n\n// 2 задание\nconst loan = new Finance.LoanCalculator(8000, 12, 24);\nconst monthlyPayment = loan.calculateMonthlyPayment();\nconsole.log(`Ежемесячный платеж по кредиту: ${monthlyPayment.toFixed(2)} евро`);\n\n// Пример расчета налога\nconst tax = new Finance.TaxCalculator(5000, 13);\nconst taxAmount = tax.calculateTax();\nconsole.log(`Налог на доход: ${taxAmount.toFixed(2)} евро`);\n\n// 3 задание\n\nconst admin = new UserManagement.Admin.AdminUser('Dan Reynolds', 'dan@example.com');\n\nconsole.log(`${admin.name} is super-admin?`, admin.isSuperAdmin);\n\nadmin.promoteToSuperAdmin();\nconsole.log(`${admin.name} is super-admin?`, admin.isSuperAdmin);\n\nadmin.demoteToAdmin();\nconsole.log(`${admin.name} is super-admin?`, admin.isSuperAdmin);\n\n// 4 задание\n\nconst fibonacciSequence = generateFibonacci(130);\nconsole.log('Последовательность Фибоначчи до 130:', fibonacciSequence);\n\nconst primeNumbers = generatePrimeNumbers(20);\nconsole.log('Простые числа до 20:', primeNumbers);\n\n"]}